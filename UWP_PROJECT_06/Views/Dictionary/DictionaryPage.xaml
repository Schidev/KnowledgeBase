<Page
    x:Class="UWP_PROJECT_06.Views.DictionaryPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:UWP_PROJECT_06.Views"
    xmlns:viewmodels="using:UWP_PROJECT_06.ViewModels"
    xmlns:models="using:UWP_PROJECT_06.Models.Dictionary"
    xmlns:hmodels="using:UWP_PROJECT_06.Models.History"
    xmlns:converters="using:UWP_PROJECT_06.Services.Converters"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    Background="{StaticResource colorWhite}"
    HorizontalAlignment="Stretch">

    <Page.DataContext>
        <viewmodels:DictionaryPageViewModel/>
    </Page.DataContext>

    <Page.Resources>
    
        <CollectionViewSource x:Name="WordsGroups" Source="{Binding WordsGroups}" IsSourceGrouped="True"/>
        <CollectionViewSource x:Name="UnknownWordsGroups" Source="{Binding UnknownWordsGroups}" IsSourceGrouped="True"/>
        
        <converters:LanguageConverter x:Key="LanguageConverter" />
        <converters:StatusConverter x:Key="StatusConverter" />
        <converters:DateConverter x:Key="DateConverter" />
        <converters:WordColorAccentConverter x:Key="WordColorAccentConverter" />
        <converters:WordColorLightConverter x:Key="WordColorLightConverter" />
        <converters:ForegroundButtonConverter x:Key="ForegroundButtonConverter" />
        <converters:ReadingModeIconConverter x:Key="ReadingModeIconConverter" />
        
        <converters:SourceIdToNameConverter x:Key="SourceIdToNameConverter" />

        <converters:SettingsHotkeysTipConverter x:Key="SettingsHotkeysTipConverter" />
        <converters:SettingsHotkeysModifiersConverter x:Key="SettingsHotkeysModifiersConverter" />
        <converters:SettingsHotkeysKeyConverter x:Key="SettingsHotkeysKeyConverter" />

    </Page.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Navigation Menu-->
        <Grid Grid.Row="0">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                    ToolTipService.ToolTip="{Binding MenuBackHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xEC52;"/>

                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="{Binding MenuBackHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding MenuBackHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                </Button.KeyboardAccelerators>
                
            </Button>

            <Button Grid.Column="1" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                    ToolTipService.ToolTip="{Binding MenuForwardHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xEBE7;"/>
                
                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="{Binding MenuForwardHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding MenuForwardHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                </Button.KeyboardAccelerators>
            
            </Button>
            
            <TextBlock Grid.Column="2" Text="DICTIONARY" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <Button Grid.Column="3" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                    ToolTipService.ToolTip="{Binding MenuMoreHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE712;"/>

                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="{Binding MenuMoreHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding MenuMoreHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                </Button.KeyboardAccelerators>

            </Button>

        </Grid>

        <!-- Content -->
        <Grid Grid.Row="1" HorizontalAlignment="Center">

            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="450" Width="*"/>
                <ColumnDefinition Width="550"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" HorizontalAlignment="Stretch">

                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="50,0,50,30" Padding="0,0,0,0.5" CornerRadius="10" BorderBrush="{StaticResource colorTransparent}" BorderThickness="0.5">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="0.5"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>


                    <AutoSuggestBox x:Name="Autosuggest" Grid.Row="0" Grid.Column="0" Text="{Binding AutoSuggestBoxText, Mode=TwoWay}"
                                    PlaceholderText="Tap to start searching..."
                                    VerticalContentAlignment="Center" Margin="10,10,0,0" Padding="10" CornerRadius="10,0,0,10" KeyUp="Autosuggest_KeyUp"
                                    ToolTipService.ToolTip="{Binding FocusOnPrimarySearchHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom"
                                    BorderBrush="{StaticResource SplitterColor}" BorderThickness="0.5" Foreground="{StaticResource colorDimGray}">

                        <AutoSuggestBox.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding FocusOnPrimarySearchHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding FocusOnPrimarySearchHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}" 
                                                 Invoked="FocusOnSearch"/>
                        </AutoSuggestBox.KeyboardAccelerators>
                        
                        <AutoSuggestBox.Resources>
                            <SolidColorBrush x:Key="TextControlBorderBrushFocused" Color="#836fa9"/>
                            <SolidColorBrush x:Key="TextControlForegroundFocused" Color="Black"/>
                            <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="White"/>

                            <SolidColorBrush x:Key="TextControlBorderBrushPointerOver" Color="Transparent"/>
                            <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="#E9E9E9"/>
                            <SolidColorBrush x:Key="TextControlPlaceholderForegroundPointerOver" Color="#836fa9"/>
                            <SolidColorBrush x:Key="TextControlForegroundPointerOver" Color="#434343"/>

                        </AutoSuggestBox.Resources>

                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="TextChanged">
                                <core:InvokeCommandAction Command="{Binding TextChangedCommand}" CommandParameter="{x:Bind Autosuggest}"/>
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                    </AutoSuggestBox>

                    <ComboBox Grid.Row="0" Grid.Column="1" x:Name="LanguagesComboBox" Margin="0,10,10,0" Padding="10" CornerRadius="0,10,10,0" 
                              Background="{StaticResource colorWhite}" BorderBrush="{StaticResource SplitterColor}" BorderThickness="0.5"
                              ToolTipService.ToolTip="{Binding FocusOnPrimaryLanguagePickerHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom"
                              ItemsSource="{Binding Languages}" SelectedIndex="{Binding ComboBoxSelectedIndex, Mode=TwoWay}">

                        <ComboBox.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding FocusOnPrimaryLanguagePickerHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding FocusOnPrimaryLanguagePickerHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}" 
                                                 Invoked="FocusOnLanguages"/>
                        </ComboBox.KeyboardAccelerators>
                        
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{Binding LanguageSelectedCommand}" CommandParameter="{x:Bind LanguagesComboBox}"/>
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                    </ComboBox>

                    <ListView x:Name="WordsList" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="20,0,20,0" 
                              ScrollViewer.VerticalScrollBarVisibility="Hidden"
                              ItemsSource="{Binding Source={StaticResource WordsGroups}}"
                              SelectedItem="{Binding SelectedWord, Mode=TwoWay}">

                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{Binding WordSelectedCommand}" CommandParameter="{x:Bind WordsList}"/>
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>


                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border BorderBrush="Transparent" BorderThickness="0" Margin="0">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="models:Word">
                                <Grid BorderBrush="{StaticResource SplitterColor}" BorderThickness="0.5" HorizontalAlignment="Stretch" CornerRadius="5" Margin="10,5,10,5">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="0.5"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="0.5"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" VerticalAlignment="Stretch" StrokeThickness="5" Stroke="{Binding PartOfSpeech, Converter={StaticResource WordColorLightConverter}}"/>

                                    <TextBlock Text="{Binding Word1}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="5" Padding="10,5,0,0" FontWeight="SemiBold"  FontFamily="ThickFont" HorizontalAlignment="Left"/>

                                    <!--<Rectangle Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" HorizontalAlignment="Stretch" Height="0.5" StrokeThickness="0.5" Stroke="{StaticResource SplitterColor}"/>-->

                                    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="9" Padding="0,0,0,2" HorizontalAlignment="Center" Text="{Binding Language, Converter={StaticResource LanguageConverter}}" Foreground="{StaticResource colorDimGray}"/>

                                    <Rectangle Grid.Row="1" Grid.Column="2" VerticalAlignment="Stretch" StrokeThickness="0.5" Margin="0,2,0,2" Stroke="{StaticResource colorDimGray}"/>

                                    <TextBlock Grid.Row="1" Grid.Column="3" FontSize="9" Padding="0,0,0,2" HorizontalAlignment="Center" Text="{Binding Status, Converter={StaticResource StatusConverter}}" Foreground="{StaticResource colorDimGray}"/>

                                    <Rectangle Grid.Row="1" Grid.Column="4" VerticalAlignment="Stretch" StrokeThickness="0.5" Margin="0,2,0,2" Stroke="{StaticResource colorDimGray}"/>

                                    <TextBlock Grid.Row="1" Grid.Column="5" FontSize="9" Padding="0,0,0,2" HorizontalAlignment="Center" Text="{Binding LastRepeatedOn, Converter={StaticResource DateConverter}}" Foreground="{StaticResource colorDimGray}"/>

                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        
                        <ListView.Resources>
                            <SolidColorBrush x:Key="ListViewItemBackgroundPointerOver" Color="Transparent" />
                            <SolidColorBrush x:Key="ListViewItemBackgroundPressed" Color="Transparent" />
                        </ListView.Resources>

                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="0.5"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Row="0"  VerticalAlignment="Center" Text="{Binding Key}" HorizontalAlignment="Center" Margin="0" Foreground="Black" FontWeight="Bold" />
                                            <Rectangle Grid.Row="1" StrokeThickness="0.5" Height="0.5" Margin="0" Stroke="{StaticResource SplitterColor}" />
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>

                                <GroupStyle.HeaderContainerStyle>
                                    <Style TargetType="ListViewHeaderItem">
                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                        <Setter Property="FontSize" Value="12" />
                                        <Setter Property="Background" Value="{StaticResource colorTransparent}" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                        <Setter Property="UseSystemFocusVisuals" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewHeaderItem">
                                                    <ContentPresenter x:Name="ContentPresenter"
                                                    Background="{TemplateBinding Background}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.HeaderContainerStyle>

                            </GroupStyle>
                        </ListView.GroupStyle>

                    </ListView>

                    <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Height="0.5" Margin="20,0,20,0"  StrokeThickness="0.5" Stroke="{StaticResource SplitterColor}"/>

                </Grid>

                <controls:GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" ResizeDirection="Rows" Background="{StaticResource SplitterColor}" Height="0.5"/>

                <Grid Grid.Row="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="50,0,50,30" Padding="0,0,0,0.5" CornerRadius="10" BorderBrush="{StaticResource colorTransparent}" BorderThickness="0.5">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="0.5"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <AutoSuggestBox x:Name="AutosuggestUnknownWords" Grid.Row="0" Grid.Column="0" Text="{Binding AutoSuggestBoxTextUnknownWord, Mode=TwoWay}" 

                                    VerticalContentAlignment="Center" KeyUp="AutosuggestUnknown_KeyUp" Margin="10,10,0,0" Padding="10" CornerRadius="10,0,0,10"
                                    ToolTipService.ToolTip="{Binding FocusOnSecondarySearchHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom"
                                    BorderBrush="{StaticResource SplitterColor}" BorderThickness="0.5" Foreground="{StaticResource colorDimGray}">
                        <AutoSuggestBox.Resources>
                            <SolidColorBrush x:Key="TextControlBorderBrushFocused" Color="#836fa9"/>
                            <SolidColorBrush x:Key="TextControlForegroundFocused" Color="Black"/>
                            <SolidColorBrush x:Key="TextControlBackgroundFocused" Color="White"/>

                            <SolidColorBrush x:Key="TextControlBorderBrushPointerOver" Color="Transparent"/>
                            <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="#E9E9E9"/>
                            <SolidColorBrush x:Key="TextControlPlaceholderForegroundPointerOver" Color="#836fa9"/>
                            <SolidColorBrush x:Key="TextControlForegroundPointerOver" Color="#434343"/>

                        </AutoSuggestBox.Resources>

                        <AutoSuggestBox.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding FocusOnSecondarySearchHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding FocusOnSecondarySearchHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}" 
                                                 Invoked="FocusOnUnknownSearch"/>
                        </AutoSuggestBox.KeyboardAccelerators>
                        
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="TextChanged">
                                <core:InvokeCommandAction Command="{Binding UnknownWordTextChangedCommand}" CommandParameter="{x:Bind AutosuggestUnknownWords}"/>
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                    </AutoSuggestBox>

                    <ComboBox Grid.Row="0" Grid.Column="1" x:Name="LanguagesComboBoxUnknownWords" Margin="0,10,10,0" Padding="10" CornerRadius="0,10,10,0" 
                              Background="{StaticResource colorWhite}" BorderBrush="{StaticResource SplitterColor}" BorderThickness="0.5"
                              ToolTipService.ToolTip="{Binding FocusOnSecondaryLanguagePickerHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom"
                              ItemsSource="{Binding Languages}" SelectedIndex="{Binding ComboBoxSelectedIndexUnknownWord, Mode=TwoWay}">

                        <ComboBox.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding FocusOnSecondaryLanguagePickerHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                                 Key="{Binding FocusOnSecondaryLanguagePickerHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}" 
                                                 Invoked="FocusOnLanguagesUnknown"/>
                        </ComboBox.KeyboardAccelerators>
                        
                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{Binding UnknownWordLanguageSelectedCommand}" CommandParameter="{x:Bind LanguagesComboBoxUnknownWords}"/>
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>

                    </ComboBox>

                    <ListView x:Name="UnknownWordsListView" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" ScrollViewer.VerticalScrollBarVisibility="Hidden" Margin="50,10,50,0"
                              ItemsSource="{Binding Source={StaticResource UnknownWordsGroups}}" SelectedItem="{Binding SelectedWordUnknownWord, Mode=TwoWay}">

                        <i:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{Binding UnknownWordSelectedCommand}" CommandParameter="{x:Bind UnknownWordsListView}"/>
                            </core:EventTriggerBehavior>
                        </i:Interaction.Behaviors>
                        
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border BorderBrush="Transparent" BorderThickness="0" Margin="0">
                                                <ContentPresenter/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="hmodels:UnknownWord">
                                <Grid BorderBrush="{StaticResource SplitterColor}" BorderThickness="0.5" HorizontalAlignment="Stretch" CornerRadius="5" Margin="10,5,10,5">

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="0.5"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Rectangle Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" VerticalAlignment="Stretch" StrokeThickness="5" Stroke="{StaticResource colorDimGrey}"/>

                                    <TextBlock Text="{Binding Word}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="5" Padding="10,5,0,0" FontWeight="SemiBold"  FontFamily="ThickFont" HorizontalAlignment="Left"/>

                                    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="9" Padding="10,0,10,2" HorizontalAlignment="Left" Text="{Binding Language, Converter={StaticResource LanguageConverter}}" Foreground="{StaticResource colorDimGray}"/>

                                    <Rectangle Grid.Row="1" Grid.Column="2" VerticalAlignment="Stretch" StrokeThickness="0.5" Margin="0,2,0,2" Stroke="{StaticResource colorDimGray}"/>

                                    <TextBlock Grid.Row="1" Grid.Column="3" FontSize="9" Padding="10,0,10,2" Text="{Binding LastModifiedOn, Converter={StaticResource DateConverter}}" Foreground="{StaticResource colorDimGray}"/>

                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <ListView.Resources>
                            <SolidColorBrush x:Key="ListViewItemBackgroundPointerOver" Color="Transparent" />
                            <SolidColorBrush x:Key="ListViewItemBackgroundPressed" Color="Transparent" />
                        </ListView.Resources>

                        <ListView.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="0.5"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Row="0"  VerticalAlignment="Center" Text="{Binding Key}" HorizontalAlignment="Center" Margin="0" Foreground="Black" FontWeight="Bold" />
                                            <Rectangle Grid.Row="1" StrokeThickness="0.5" Height="0.5" Margin="0" Stroke="{StaticResource SplitterColor}" />
                                        </Grid>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>

                                <GroupStyle.HeaderContainerStyle>
                                    <Style TargetType="ListViewHeaderItem">
                                        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                        <Setter Property="FontSize" Value="15" />
                                        <!--<Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />-->
                                        <Setter Property="Background" Value="{StaticResource colorTransparent}" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                        <Setter Property="Height" Value="{ThemeResource ListViewHeaderItemThemeFontSize}"/>
                                        <!--<Setter Property="MinHeight" Value="{ThemeResource ListViewHeaderItemMinHeight}" />-->
                                        <Setter Property="UseSystemFocusVisuals" Value="True" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewHeaderItem">
                                                    <ContentPresenter x:Name="ContentPresenter"
                                                    Background="{TemplateBinding Background}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </GroupStyle.HeaderContainerStyle>

                            </GroupStyle>
                        </ListView.GroupStyle>


                    </ListView>

                    <Rectangle Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Height="0.5" Margin="40,0,40,0"  StrokeThickness="0.5" Stroke="{StaticResource SplitterColor}"/>

                </Grid>

            </Grid>

            <Grid x:Name="cardGrid" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="30,0,40,30" Padding="0.5" CornerRadius="10" BorderBrush="{StaticResource colorDimGrey}" BorderThickness="0.5">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0.5"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Frame x:Name="DictionaryFrame" Grid.Row="0" CornerRadius="10,10,0,0" Content="{Binding FrameContent, Mode=TwoWay}" 
                       BorderBrush="{StaticResource colorPrimaryDark}"/>
                
                <Rectangle Grid.Row="1" StrokeThickness="0.5" Height="0.5" Margin="0" Stroke="{StaticResource SplitterColor}"/>

                <Grid Grid.Row="2" Background="{StaticResource colorWhite}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>


                    <Button Grid.Column="0" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding ClearCommand}" Visibility="{Binding IsWritingMode}"
                            ToolTipService.ToolTip="{Binding CardClearHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE74D;"/>
                        
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding CardClearHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding CardClearHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                    <Button Grid.Column="1" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding CardBackButtonPressedCommand}" Visibility="{Binding IsOnlineDictionaryActive}"
                            ToolTipService.ToolTip="{Binding CardBackHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xEC52;"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding CardBackHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding CardBackHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>
                        
                    </Button>

                    <Button Grid.Column="2" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding CardForwardButtonPressedCommand}" Visibility="{Binding IsOnlineDictionaryActive}"
                            ToolTipService.ToolTip="{Binding CardForwardHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xEBE7;"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding CardForwardHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding CardForwardHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>
                    
                    <Button Grid.Column="3" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding CardRefreshButtonPressedCommand}" Visibility="{Binding IsOnlineDictionaryActive}"
                            ToolTipService.ToolTip="{Binding CardRefreshHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE72C;"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding CardRefreshHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding CardRefreshHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                    <Button Grid.Column="4" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding DeleteUnknownWordCommand}" Visibility="{Binding IsUnknownWordSelected, Mode=TwoWay}"
                            ToolTipService.ToolTip="{Binding CardDeleteHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE74D;"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding CardDeleteHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                                 Key="{Binding CardDeleteHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                    <TextBlock Grid.Column="5" Text="{Binding SelectedWordString, Mode=TwoWay}" TextAlignment="Center" FontSize="12" VerticalAlignment="Center"/>

                    <Button Grid.Column="6" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding ScreenshotCommand}" CommandParameter="{x:Bind cardGrid}"
                            ToolTipService.ToolTip="{Binding TakeAScreenshotHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE722;"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding TakeAScreenshotHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding TakeAScreenshotHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                    <!-- Btn Open Reading/Writing Mode-->
                    <Button Grid.Column="7" Style="{StaticResource CustomButtonColorsStyle}"  Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding ChangeModeCommand}"
                            ToolTipService.ToolTip="{Binding ChangeModeHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="{Binding IsWritingMode, Converter={StaticResource ReadingModeIconConverter}}"  Foreground="{Binding IsReadingMode, Converter={StaticResource ForegroundButtonConverter}}"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding ChangeModeHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding ChangeModeHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                    <!-- Open in browser-->
                    <Button Grid.Column="8" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding SearchOnlineCommand}"
                            ToolTipService.ToolTip="{Binding OpenInBrowserHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE774;" Foreground="{Binding IsOnlineDictionaryActive, Converter={StaticResource ForegroundButtonConverter}}"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding OpenInBrowserHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding OpenInBrowserHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                    <!-- Add new word -->
                    <Button Grid.Column="9" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding AddWordCommand}"
                            ToolTipService.ToolTip="{Binding AddNewCardHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE8E5;" Foreground="{Binding IsAddingMode, Converter={StaticResource ForegroundButtonConverter}}"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding AddNewCardHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding AddNewCardHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                    <!-- Save in unknown words-->
                    <Button Grid.Column="10" Style="{StaticResource CustomButtonColorsStyle}" Margin="5" Padding="5" CornerRadius="5" Background="{StaticResource colorWhite}"
                            Command="{Binding SaveCommand}"
                            ToolTipService.ToolTip="{Binding SaveCardHotkeyName, Converter={StaticResource SettingsHotkeysTipConverter}, Mode=OneWay}" ToolTipService.Placement="Bottom">
                        <FontIcon FontFamily="Segoe MDL2 Assets" FontSize="12" Glyph="&#xE792;"/>

                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Modifiers="{Binding SaveCardHotkeyName, Converter={StaticResource SettingsHotkeysModifiersConverter}, Mode=OneWay}" 
                                         Key="{Binding SaveCardHotkeyName, Converter={StaticResource SettingsHotkeysKeyConverter}, Mode=OneWay}"/>
                        </Button.KeyboardAccelerators>

                    </Button>

                </Grid>

            </Grid>

        </Grid>

    </Grid>
</Page>
